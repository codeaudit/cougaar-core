--- /usr/local/java/jdk1.4.1/src/java/io/ObjectInputStream.java	Thu Aug 29 03:16:33 2002
+++ ObjectInputStream.java	Mon Oct 21 09:04:21 2002
@@ -1,3 +1,8 @@
+/** Modified by cougaar
+ * <copyright>
+ *  Copyright 2003 BBNT Solutions, LLC
+ *  under sponsorship of the Defense Advanced Research Projects Agency (DARPA).
+ * 
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the Cougaar Open Source License as published by
+ *  DARPA on the Cougaar Open Source Website (www.cougaar.org).
+ * 
+ *  THE COUGAAR SOFTWARE AND ANY DERIVATIVE SUPPLIED BY LICENSOR IS
+ *  PROVIDED 'AS IS' WITHOUT WARRANTIES OF ANY KIND, WHETHER EXPRESS OR
+ *  IMPLIED, INCLUDING (BUT NOT LIMITED TO) ALL IMPLIED WARRANTIES OF
+ *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, AND WITHOUT
+ *  ANY WARRANTIES AS TO NON-INFRINGEMENT.  IN NO EVENT SHALL COPYRIGHT
+ *  HOLDER BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL
+ *  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE OF DATA OR PROFITS,
+ *  TORTIOUS CONDUCT, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+ *  PERFORMANCE OF THE COUGAAR SOFTWARE.
+ * </copyright>
+ **/
+
 /*
  * @(#)ObjectInputStream.java	1.142 02/07/19
  *
@@ -1628,7 +1633,9 @@
 
 	Object obj;
 	try {
-	    obj = desc.isInstantiable() ? desc.newInstance() : null;
+          // obj = desc.isInstantiable() ? desc.newInstance() : null;
+          // COUGAAR mod
+          obj = desc.isInstantiable() ? newInstanceFromDesc(desc) : null;
 	} catch (Exception ex) {
 	    throw new InvalidClassException(
 		desc.forClass().getName(), "unable to create instance");
@@ -2705,7 +2712,7 @@
 	}
 
 	public String readLine() throws IOException {
-	    return din.readLine();	// deprecated, not worth optimizing
+	    return ((DataInput)din).readLine();	// deprecated, not worth optimizing
 	}
 	
 	/* -------------- primitive data array input methods --------------- */
@@ -3342,4 +3349,19 @@
 	    }
 	}
     }
+
+  // COUGAAR
+  protected Object newInstanceFromDesc(ObjectStreamClass desc) 
+    throws InstantiationException, IllegalAccessException, java.lang.reflect.InvocationTargetException
+  {
+    return real_newInstanceFromDesc(desc);
+  }
+
+  // COUGAAR
+  protected final Object real_newInstanceFromDesc(ObjectStreamClass desc) 
+    throws InstantiationException, IllegalAccessException, java.lang.reflect.InvocationTargetException
+  {
+    return desc.newInstance();
+  }
 }
+
