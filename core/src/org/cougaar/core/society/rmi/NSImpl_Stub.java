/*
 * <copyright>
 * Copyright 1997-2001 Defense Advanced Research Projects
 * Agency (DARPA) and ALPINE (a BBN Technologies (BBN) and
 * Raytheon Systems Company (RSC) Consortium).
 * This software to be used only in accordance with the
 * COUGAAR licence agreement.
 * </copyright>
 */
// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package org.cougaar.core.society.rmi;

public final class NSImpl_Stub
    extends java.rmi.server.RemoteStub
    implements org.cougaar.core.society.rmi.NS, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_clear_0;
    private static java.lang.reflect.Method $method_containsKey_1;
    private static java.lang.reflect.Method $method_entrySet_2;
    private static java.lang.reflect.Method $method_get_3;
    private static java.lang.reflect.Method $method_isEmpty_4;
    private static java.lang.reflect.Method $method_keySet_5;
    private static java.lang.reflect.Method $method_put_6;
    private static java.lang.reflect.Method $method_remove_7;
    private static java.lang.reflect.Method $method_size_8;
    private static java.lang.reflect.Method $method_values_9;
    
    static {
	try {
	    $method_clear_0 = org.cougaar.core.society.rmi.NS.class.getMethod("clear", new java.lang.Class[] {java.lang.String.class});
	    $method_containsKey_1 = org.cougaar.core.society.rmi.NS.class.getMethod("containsKey", new java.lang.Class[] {java.lang.String.class});
	    $method_entrySet_2 = org.cougaar.core.society.rmi.NS.class.getMethod("entrySet", new java.lang.Class[] {java.lang.String.class});
	    $method_get_3 = org.cougaar.core.society.rmi.NS.class.getMethod("get", new java.lang.Class[] {java.lang.String.class});
	    $method_isEmpty_4 = org.cougaar.core.society.rmi.NS.class.getMethod("isEmpty", new java.lang.Class[] {java.lang.String.class});
	    $method_keySet_5 = org.cougaar.core.society.rmi.NS.class.getMethod("keySet", new java.lang.Class[] {java.lang.String.class});
	    $method_put_6 = org.cougaar.core.society.rmi.NS.class.getMethod("put", new java.lang.Class[] {java.lang.String.class, java.lang.Object.class});
	    $method_remove_7 = org.cougaar.core.society.rmi.NS.class.getMethod("remove", new java.lang.Class[] {java.lang.String.class});
	    $method_size_8 = org.cougaar.core.society.rmi.NS.class.getMethod("size", new java.lang.Class[] {java.lang.String.class});
	    $method_values_9 = org.cougaar.core.society.rmi.NS.class.getMethod("values", new java.lang.Class[] {java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public NSImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of clear(String)
    public void clear(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_clear_0, new java.lang.Object[] {$param_String_1}, 7545105760904876619L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of containsKey(String)
    public boolean containsKey(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_containsKey_1, new java.lang.Object[] {$param_String_1}, 8700388632849727922L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of entrySet(String)
    public java.util.Collection entrySet(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_entrySet_2, new java.lang.Object[] {$param_String_1}, -6824080539228330667L);
	    return ((java.util.Collection) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of get(String)
    public java.lang.Object get(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_get_3, new java.lang.Object[] {$param_String_1}, 8004904436093386247L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of isEmpty(String)
    public boolean isEmpty(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_isEmpty_4, new java.lang.Object[] {$param_String_1}, -6435182784555278806L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of keySet(String)
    public java.util.Collection keySet(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_keySet_5, new java.lang.Object[] {$param_String_1}, -4321372453073658741L);
	    return ((java.util.Collection) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of put(String, Object)
    public java.lang.Object put(java.lang.String $param_String_1, java.lang.Object $param_Object_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_put_6, new java.lang.Object[] {$param_String_1, $param_Object_2}, 6067521610743438224L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remove(String)
    public java.lang.Object remove(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_remove_7, new java.lang.Object[] {$param_String_1}, -6350680234063384313L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of size(String)
    public int size(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_size_8, new java.lang.Object[] {$param_String_1}, -6106722299481825686L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of values(String)
    public java.util.Collection values(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_values_9, new java.lang.Object[] {$param_String_1}, 8279821482768427982L);
	    return ((java.util.Collection) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
