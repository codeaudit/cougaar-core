2001-08-31  Ray Tomlinson  <RTomlinson@bbn.com>

	* Blackboard.java:
	Add system property org.cougaar.core.cluster.persistence.sequence
	used when org.cougaar.core.cluster.persistence.disableWrite is
	true. It specifies the archive number to be used in rehydrating
	the society. The form of the value is "_nnnnn" which is the suffix
	on the sequence file to be used. When executing in really time, the
	relevant suffix is the one on the sequence file having the date
	desired. If running in non-real time. The correspondence must be
	established manually.

2001-08-30  Ray Tomlinson  <RTomlinson@bbn.com>

	* Distributor.java:
	Work-around bug of persisted state containing recently deleted
	objects by persisting, gc'ing, and persisting again. Also, pass
	argument to persist specifying whether full or incremental
	persistence is desired.

2001-08-17  Ray Tomlinson  <RTomlinson@bbn.com>

	* ClusterImpl.java:
	Fix MetricsHeartbeat and stop it when the cluster is unloaded.

	* MessageManagerImpl.java:
	Don't run the keep-alive sender if the message manager is not
	being used.

	* ClusterImpl.java:
	Stop the QueueHandler thread when unloading.

	* ClusterImpl.java:
	Release all services acquired during load() in unload().

2001-08-16  Ray Tomlinson  <RTomlinson@bbn.com>

	* ClusterImpl.java:
	Replace StateTuple[] with AgentState having both the StateTuple[]
	describing every child as well as the blackboard state. During
	load(), the loadState is used for creating the blackboard as well
	as all the children. The suspend (and resume) methods suspend (and
	resume) the shared plugin service provider. This effectively
	suspends (and resumes) all the plugins using the shared scheduler.

	* SharedPlugInManager.java:
	Implement suspend and resume methods. Suspend sets a flag, signals
	the thread to wake up and waits for the thread to die. The thread
	examines the flag on each iteration and if set, exits. Resume
	simply calls assureStarted which creates a new thread and starts
	it running.

	* SharedThreadingServiceProvider.java:
	Pass through suspend and resume to the underlying shard plugin
	manager.

2001-08-13  Ray Tomlinson  <rtomlinson@bbn.com>

	* Subscriber.java:
	Add persistNow() method permitting a plugin to insure that
	persistence has been performed prior to taking action. Used by the
	DeletionPlugIn to archive information that is about to be deleted.

	* MessageManagerImpl.java:
	Disable the advanceEpoch method when the message manager is not
	being used. This allows the method to be called without regard to
	whether the message manager is actually in use.

	* Distributor.java:
	Add "lazy persistence" that creates persistence deltas at a low
	rate or upon request. This persistence information is not
	synchronized with blackboards in other agents and so may require
	reconciliation after restarts occur. Correct operation of these
	feature awaits the availability of restart information from the
	message transport services.
	A method has been added to perform persistence on demand. This
	feature is accessed through the BlackboardService.
	A method has been added to perform persistence and return the
	bytes of the persisted state as part of an object suitable for
	return from getState().

	* ClusterImpl.java:
	Initialize persistence with a lazyPersistence flag. The checked in
	code contains a debugging kludge that is innocuous if not used.

	* Blackboard.java:
	Add getState() method to support dynamic components. the state
	object now consistes only of a PersistenceObject.

2001-05-17  Ray Tomlinson  <rtomlinson@bbn.com>

	* Blackboard.java:
	Bug #411
	Change default of org.cougaar.core.cluster.enablePublishException
	to false. This will suppress these exceptions which are largely
	false positives.

2001-04-30  Ray Tomlinson  <RTomlinson@bbn.com>

	* Distributor.java:
	Debugging Support
	Include received directives in the distributor log. This gives a
	much clearer picture of what's happening.

2001-04-03  Ray Tomlinson  <RTomlinson@bbn.com>

	* Whiteboard.java:
	Convert changes to ALPPlan made in 7.2 into changes to this file.
	Add a systemproperty
	org.cougaar.core.cluster.enablePublishException to enable the
	generation of PublishExceptions. Defaults to true since such
	exceptions may indicate a bug. May be set to false to ignore.

	* Subscriber.java:
	Applies to Bug #241
	Fixes null pointer exception by checking for null and printing
	something different. Null pointer exceptions during the printing
	of PublishExceptions should cease.

	* AddEnvelopeTuple.java:
	Applies to Bug #181
	Add null check when creating an add envelope event. Should help
	catch this bug sooner. IllegalArgumentException should occur if
	bad publishAdd is performed.

	* ChangeEnvelopeTuple.java:
	Applies to Bug #181
	Add null check when creating an change envelope event. Should help
	catch this bug sooner. IllegalArgumentException should occur if
	bad publishChange is performed.

	* RemoveEnvelopeTuple.java:
	Applies to Bug #181
	Add null check when creating an remove envelope event. Should help
	catch this bug sooner. IllegalArgumentException should occur if
	bad publishRemove is performed.

	* BulkEnvelopeTuple.java:
	Applies to Bug #181
	Add null check when creating an bulk envelope event. Should help
	catch this bug sooner. IllegalArgumentException should occur if
	bad BulkEnvelopeTuple is created.

1999-07-13  Ray Tomlinson  <rtomlinson@bbn.com>

	* Added changes to support persistence:
	* Subscriber
	  Does not push outbox envelopes to Distributor.
	  Saves inboxes of transactions.
	* Distributor
	  Pulls envelopes from Subscriber along with inboxes
	  of uncompleted transactions.
	  Envelopes are always distributed by the Distributor; no
	  exceptions.
	* SubscriptionClient
	  Added getSubscriptionClientName so persisted inboxes can be
	  matched up with the proper subscriptions.
	* Envelope
	  Make Serializable so they can be persisted.
	  Remove originator. It's not needed and is hard to recreate
	  during rehydration.

1999-07-13  Beth DePass <bdepass@bbn.com>

  * Subscriber add in execution monitoring - commitment date checks to
  publishAdd and publishChange.

1999-02-10  Michael Thome  <mthome@bbn.com>

	* SubscriptionClient remove now unused wake() method from
	interface. 

	* Distributor, DistributorTest Move Distributor point test
	code into its own file.

1999-02-08  Michael Thome  <mthome@bbn.com>

	* LogPlan, *LP, LogicProvider, etal. Unify the LogicProviders so
	that "message" flavors of LPs are executed by the LogPlan rather 
	than in the thread of the Cluster.  This simplifies the logic and
	makes the LP code slightly faster.

	* Subscriber, et.al. Subscribers now only wake up on subscription
	activity or on explicit wake requests.

1999-02-05  Michael Thome  <mthome@bbn.com>

	* Subscriber Split wakeSubscriptionWatchers functionality into
	three methods: 
	  signalExternalActivity(); // distributer passed new info
	  signalInternalActivity(); // plugin made changes to collections
	  signalClientActivity();   // plugin asked to be (re)awakened
	All callers updated to use the correct ones.

1999-02-03  Beth DePass <bdepass@bbn.com>
	* RescindLP
	Remove rescinded Allocation and AssetTransfer PlanElements
	from the respective Asset's RoleSchedule.
  
	* AssetTransferLp
	Minor cleanup
  
	* ReceiveAssetLP
	Move to using RoleSchedule object for available schedule setting.

1999-02-03  Michael Thome  <mthome@bbn.com>

	* Persistence*
	New Subscriber, Envelope to support Persistence plugins.
	Persistence rehydrations are quiet - that is, they do not modify
	delta lists.

	* Subscriber
	Use Claimable interface (see org.cougaar.core.clusterobject.Claimable) to
	"claim" objects by the PlugIn which enters them into the logplan.

	Lazy outbox creation.

	Plugin-defined Envelope (outbox) class.

	* RemoteClusterAllocationLP
	Rewrite to correctly re-send messages from persisted PlanElements.

	* ReceiveTaskLP
	Stable behavior when receiving multiple copies of the same task.

	* Various
	use internal method to set the destination cluster of sent
	messages to prevent complaints from new code to prevent
	mis-directed messages.

	Better toString()

	* IncrementalSubscription
	Reduce consing for users of deltas lists.  Only cons new lists
	when the old lists were non-empty.

	* EnvelopeParseLP
	add isBulkEnvelopeTuple(Object)

	* DummyCCAdapter
	Proper transaction handling until the class is removed.

1999-01-15  Michael Thome  <mthome@bbn.com>

	* org.cougaar.core.cluster.*
	Merge Subscription with ContainerWrapper with the intent of making
	Subscription the primary class. ContainerWrapper and subclasses
	have been made into deprecated interfaces implemented by the new
	classes.  The deprecated interfaces will be deleted early 1999.

	subscribe() returns Subscription rather than Collection.

	rename Subscription.getRealContainer() to be
	Subscription.getContainer(), deprecating old name.

	Revamp subscribe so that a Subscription may be passed as an
	argument.  See Subscriber.Subscribe(Subscription) documentation
	for details. This, in theory, allows plugins to write their own,
	though it is a dangerous proposition right now... perhaps careful
	finals would help.


1999-05-11 Richard Lazarus

* Added accessors to get, set, and advance ALP scenario time

	


	
	