/* 
 * <copyright>
 *  Copyright 2002-2003 BBNT Solutions, LLC
 *  under sponsorship of the Defense Advanced Research Projects Agency (DARPA).
 * 
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the Cougaar Open Source License as published by
 *  DARPA on the Cougaar Open Source Website (www.cougaar.org).
 * 
 *  THE COUGAAR SOFTWARE AND ANY DERIVATIVE SUPPLIED BY LICENSOR IS
 *  PROVIDED 'AS IS' WITHOUT WARRANTIES OF ANY KIND, WHETHER EXPRESS OR
 *  IMPLIED, INCLUDING (BUT NOT LIMITED TO) ALL IMPLIED WARRANTIES OF
 *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, AND WITHOUT
 *  ANY WARRANTIES AS TO NON-INFRINGEMENT.  IN NO EVENT SHALL COPYRIGHT
 *  HOLDER BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL
 *  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE OF DATA OR PROFITS,
 *  TORTIOUS CONDUCT, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 *  PERFORMANCE OF THE COUGAAR SOFTWARE.
 * </copyright>
 */

package org.cougaar.core.mobility.ldm;

import org.cougaar.core.mobility.AbstractTicket;
import org.cougaar.core.mobility.Ticket;
import org.cougaar.core.mts.MessageAddress;
import org.cougaar.core.service.UIDService;
import org.cougaar.core.util.UID;

/**
 * Package-private factory implementation.
 */
class MobilityFactoryImpl implements MobilityFactory {

  private UIDService uidService;
  private MessageAddress nodeId;
  private MessageAddress agentId;

  public MobilityFactoryImpl(
      UIDService uidService,
      MessageAddress nodeId,
      MessageAddress agentId) {
    this.uidService = uidService;
    this.nodeId = nodeId;
    this.agentId = agentId;
  }

  public Object createTicketIdentifier() {
    UID uid = uidService.nextUID();
    return new TicketIdentifier(uid);
  }

  public MoveAgent createMoveAgent(Ticket ticket) {
    Object tid = ticket.getIdentifier();
    if (!(tid instanceof TicketIdentifier)) {
      throw new IllegalArgumentException(
          "The ticket must have a \"getIdentifier()\""+
          " that was generated by this MobilityFactory's"+
          " \"createTicketIdentifier()\"");
    }
    MessageAddress source = agentId;
    MessageAddress target = ticket.getMobileAgent();
    if (target == null) {
      target = agentId;
    }
    UID uid = ((TicketIdentifier) tid).getUID();
    return
      new MoveAgentAdapter(
          uid, source, target, ticket);
  }

  public AgentControl createAgentControl(
      UID ownerUID,
      MessageAddress target,
      AbstractTicket ticket) {
    UID uid = uidService.nextUID();
    return new AgentControlImpl(
        uid, ownerUID, agentId, target, ticket);
  }
}
