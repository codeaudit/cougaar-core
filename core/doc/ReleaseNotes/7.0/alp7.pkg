#alp7.pkg
# This is a list of package moves to be applied in order to port
# ALP/COUGAAR software from the cougaar 6.x to cougaar 7.x pacakge
# layout.  This file is used as an input file to the repackage and
# the mvsources scripts.
#
# empty lines and anything after a '#' are ignored.
#
# format:
# old.package.prefix	new.package.prefix
# The package prefixes are simple java package strings separated
# by whitespace.
# Order is important.  The first matching pattern always wins.
#
# A number of package prefix abbreviations are accepted:
#  (abbrev  =  actual)
a.	=	alp.
oc.	=	org.cougaar.
occ.	=	org.cougaar.core.
ocu.	=	org.cougaar.util.
oct.	= 	org.cougaar.tools.
ocd.	=	org.cougaar.domain.
ocdp.	=	org.cougaar.domain.planning.
mdl.	=	mil.darpa.log.

#
# special cases
#

# the others get ditched later
#alp.test.Debug		ocu.Debug
#alp.test.Assert		ocu.Assert
#alp.test.AssertionException		ocu.AssertionException
#alp.test.IntrospectionTest		ocu.IntrospectionTest
# the rest of alp.test is example code for planning.


# package name transforms

# javaiopatch
# (no change)

# build
a.build			oct.build

# server
a.server		oct.server

# tutorial
a.tutorial		oc.tutorial.faststart
#not to be confused with :
#n/a			oc.tutorial.basic
#n/a			oc.tutorial.advanced

# core
a.ldm			ocdp.ldm
#a.ldm.asset		ocdpl.asset
#a.ldm.measure		ocdpl.measure
#a.ldm.plan		ocdpl.plan
#a.ldm.lps		ocdpl.lps
#a.ldm.RootDomain	ocdpl.RootDomain

a.cluster		occ.cluster
a.society		occ.society

alp.persist		occ.cluster.persist
alp.plugin		occ.plugin
alp.ui.planserver	oc.lib.planserver

# cui
# n/a			oc.ui.cui		# not checked in yet.



# lib (was utility)  Mostly a tangled mess
a.contract		oc.lib.contract
mdl.alp.util.callback	oc.lib.callback
mdl.alp.util.filterPlugins	oc.lib.filter
mdl.alp.util.gss	oc.lib.gss	# want to move to planning
mdl.alp.util.ldm	oc.lib.plugin
mdl.alp.util.param	oc.lib.param	# wanted to move to ocu. 
mdl.alp.util.util	oc.lib.util	# ugh!
mdl.alp.util.xml	oc.lib.xml
mdl.alp.util		oc.lib.plugin	# catch java files

# util (was in core)
alp.util		oc.util

# glm (was alpine)
mdl.alp.domain		oc.domain.glm
mdl.alp.glm		oc.domain.glm
mdl.alp.execution	oc.domain.glm.execution

# mlm (was alpine)
mdl.alpine.debug		oc.domain.mlm.debug
mdl.alpine.examples		oc.domain.mlm.examples
mdl.alpine.plugin		oc.domain.mlm.plugin
mdl.alpine.ui			oc.domain.mlm.ui

# tutorial
a.tutorial		oc.tutorial.class	# this is 

# scalability
a.testing		oct.scalability
#there are alp.test classes both in (old) core and tools (scalability)
# we've moved the overlap into a.testing in 6.8
#a.test			oct.scalability

# for core above - needs to come after alp.testing!
alp.test		oc.util

# get version.def
a.			oc.
